// Mocks generated by Mockito 5.2.0 from annotations
// in base_app/test/app/modules/home/domain/usecases/get_products_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:base_app/app/modules/home/domain/entities/product_entity.dart'
    as _i5;
import 'package:base_app/app/modules/home/domain/entities/search_products_filters_entity.dart'
    as _i6;
import 'package:base_app/app/modules/home/domain/repositories/get_products_repository.dart'
    as _i3;
import 'package:core/core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IGetProductsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetProductsRepository extends _i1.Mock
    implements _i3.IGetProductsRepository {
  MockIGetProductsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<Exception, List<_i5.ProductEntity>>> call(
          {_i6.SearchProductsFiltersEntity? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
              returnValue:
                  Future<_i2.Either<Exception, List<_i5.ProductEntity>>>.value(
                      _FakeEither_0<Exception, List<_i5.ProductEntity>>()))
          as _i4.Future<_i2.Either<Exception, List<_i5.ProductEntity>>>);
}
